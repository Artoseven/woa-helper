// Generated by view binder compiler. Do not edit!
package id.kuato.woahelper.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import id.kuato.verncopyright.BlurLayout;
import id.kuato.woahelper.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final BlurLayout blur;

  @NonNull
  public final MaterialCardView cvBackupBoot;

  @NonNull
  public final MaterialCardView cvDumpModem;

  @NonNull
  public final MaterialCardView cvDumpSensor;

  @NonNull
  public final MaterialCardView cvFlashUefi;

  @NonNull
  public final MaterialCardView cvGroup;

  @NonNull
  public final MaterialCardView cvGuide;

  @NonNull
  public final MaterialCardView cvInfo;

  @NonNull
  public final MaterialCardView cvQuickboot;

  @NonNull
  public final ToolbarBinding toolbarlayout;

  @NonNull
  public final TextView tvAppCreator;

  @NonNull
  public final TextView tvBackupBoot;

  @NonNull
  public final TextView tvBackupStatus;

  @NonNull
  public final TextView tvBackupSubtitle;

  @NonNull
  public final TextView tvBootSubtitle;

  @NonNull
  public final TextView tvDumpModem;

  @NonNull
  public final TextView tvDumpSensor;

  @NonNull
  public final TextView tvFlashUefi;

  @NonNull
  public final TextView tvModemSubtitle;

  @NonNull
  public final TextView tvPanel;

  @NonNull
  public final TextView tvQuickBoot;

  @NonNull
  public final TextView tvRamvalue;

  @NonNull
  public final TextView tvSensorSubtitle;

  @NonNull
  public final TextView tvUefiSubtitle;

  @NonNull
  public final TextView tvUefiVersion;

  private ActivityMainBinding(@NonNull CoordinatorLayout rootView, @NonNull BlurLayout blur,
      @NonNull MaterialCardView cvBackupBoot, @NonNull MaterialCardView cvDumpModem,
      @NonNull MaterialCardView cvDumpSensor, @NonNull MaterialCardView cvFlashUefi,
      @NonNull MaterialCardView cvGroup, @NonNull MaterialCardView cvGuide,
      @NonNull MaterialCardView cvInfo, @NonNull MaterialCardView cvQuickboot,
      @NonNull ToolbarBinding toolbarlayout, @NonNull TextView tvAppCreator,
      @NonNull TextView tvBackupBoot, @NonNull TextView tvBackupStatus,
      @NonNull TextView tvBackupSubtitle, @NonNull TextView tvBootSubtitle,
      @NonNull TextView tvDumpModem, @NonNull TextView tvDumpSensor, @NonNull TextView tvFlashUefi,
      @NonNull TextView tvModemSubtitle, @NonNull TextView tvPanel, @NonNull TextView tvQuickBoot,
      @NonNull TextView tvRamvalue, @NonNull TextView tvSensorSubtitle,
      @NonNull TextView tvUefiSubtitle, @NonNull TextView tvUefiVersion) {
    this.rootView = rootView;
    this.blur = blur;
    this.cvBackupBoot = cvBackupBoot;
    this.cvDumpModem = cvDumpModem;
    this.cvDumpSensor = cvDumpSensor;
    this.cvFlashUefi = cvFlashUefi;
    this.cvGroup = cvGroup;
    this.cvGuide = cvGuide;
    this.cvInfo = cvInfo;
    this.cvQuickboot = cvQuickboot;
    this.toolbarlayout = toolbarlayout;
    this.tvAppCreator = tvAppCreator;
    this.tvBackupBoot = tvBackupBoot;
    this.tvBackupStatus = tvBackupStatus;
    this.tvBackupSubtitle = tvBackupSubtitle;
    this.tvBootSubtitle = tvBootSubtitle;
    this.tvDumpModem = tvDumpModem;
    this.tvDumpSensor = tvDumpSensor;
    this.tvFlashUefi = tvFlashUefi;
    this.tvModemSubtitle = tvModemSubtitle;
    this.tvPanel = tvPanel;
    this.tvQuickBoot = tvQuickBoot;
    this.tvRamvalue = tvRamvalue;
    this.tvSensorSubtitle = tvSensorSubtitle;
    this.tvUefiSubtitle = tvUefiSubtitle;
    this.tvUefiVersion = tvUefiVersion;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.blur;
      BlurLayout blur = ViewBindings.findChildViewById(rootView, id);
      if (blur == null) {
        break missingId;
      }

      id = R.id.cv_backup_boot;
      MaterialCardView cvBackupBoot = ViewBindings.findChildViewById(rootView, id);
      if (cvBackupBoot == null) {
        break missingId;
      }

      id = R.id.cv_dump_modem;
      MaterialCardView cvDumpModem = ViewBindings.findChildViewById(rootView, id);
      if (cvDumpModem == null) {
        break missingId;
      }

      id = R.id.cv_dump_sensor;
      MaterialCardView cvDumpSensor = ViewBindings.findChildViewById(rootView, id);
      if (cvDumpSensor == null) {
        break missingId;
      }

      id = R.id.cv_flash_uefi;
      MaterialCardView cvFlashUefi = ViewBindings.findChildViewById(rootView, id);
      if (cvFlashUefi == null) {
        break missingId;
      }

      id = R.id.cv_group;
      MaterialCardView cvGroup = ViewBindings.findChildViewById(rootView, id);
      if (cvGroup == null) {
        break missingId;
      }

      id = R.id.cv_guide;
      MaterialCardView cvGuide = ViewBindings.findChildViewById(rootView, id);
      if (cvGuide == null) {
        break missingId;
      }

      id = R.id.cv_info;
      MaterialCardView cvInfo = ViewBindings.findChildViewById(rootView, id);
      if (cvInfo == null) {
        break missingId;
      }

      id = R.id.cv_quickboot;
      MaterialCardView cvQuickboot = ViewBindings.findChildViewById(rootView, id);
      if (cvQuickboot == null) {
        break missingId;
      }

      id = R.id.toolbarlayout;
      View toolbarlayout = ViewBindings.findChildViewById(rootView, id);
      if (toolbarlayout == null) {
        break missingId;
      }
      ToolbarBinding binding_toolbarlayout = ToolbarBinding.bind(toolbarlayout);

      id = R.id.tvAppCreator;
      TextView tvAppCreator = ViewBindings.findChildViewById(rootView, id);
      if (tvAppCreator == null) {
        break missingId;
      }

      id = R.id.tv_backup_boot;
      TextView tvBackupBoot = ViewBindings.findChildViewById(rootView, id);
      if (tvBackupBoot == null) {
        break missingId;
      }

      id = R.id.tv_backup_status;
      TextView tvBackupStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvBackupStatus == null) {
        break missingId;
      }

      id = R.id.tv_backup_subtitle;
      TextView tvBackupSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (tvBackupSubtitle == null) {
        break missingId;
      }

      id = R.id.tv_boot_subtitle;
      TextView tvBootSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (tvBootSubtitle == null) {
        break missingId;
      }

      id = R.id.tv_dump_modem;
      TextView tvDumpModem = ViewBindings.findChildViewById(rootView, id);
      if (tvDumpModem == null) {
        break missingId;
      }

      id = R.id.tv_dump_sensor;
      TextView tvDumpSensor = ViewBindings.findChildViewById(rootView, id);
      if (tvDumpSensor == null) {
        break missingId;
      }

      id = R.id.tv_flash_uefi;
      TextView tvFlashUefi = ViewBindings.findChildViewById(rootView, id);
      if (tvFlashUefi == null) {
        break missingId;
      }

      id = R.id.tv_modem_subtitle;
      TextView tvModemSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (tvModemSubtitle == null) {
        break missingId;
      }

      id = R.id.tv_panel;
      TextView tvPanel = ViewBindings.findChildViewById(rootView, id);
      if (tvPanel == null) {
        break missingId;
      }

      id = R.id.tv_quick_boot;
      TextView tvQuickBoot = ViewBindings.findChildViewById(rootView, id);
      if (tvQuickBoot == null) {
        break missingId;
      }

      id = R.id.tv_ramvalue;
      TextView tvRamvalue = ViewBindings.findChildViewById(rootView, id);
      if (tvRamvalue == null) {
        break missingId;
      }

      id = R.id.tv_sensor_subtitle;
      TextView tvSensorSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (tvSensorSubtitle == null) {
        break missingId;
      }

      id = R.id.tv_uefi_subtitle;
      TextView tvUefiSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (tvUefiSubtitle == null) {
        break missingId;
      }

      id = R.id.tv_uefi_version;
      TextView tvUefiVersion = ViewBindings.findChildViewById(rootView, id);
      if (tvUefiVersion == null) {
        break missingId;
      }

      return new ActivityMainBinding((CoordinatorLayout) rootView, blur, cvBackupBoot, cvDumpModem,
          cvDumpSensor, cvFlashUefi, cvGroup, cvGuide, cvInfo, cvQuickboot, binding_toolbarlayout,
          tvAppCreator, tvBackupBoot, tvBackupStatus, tvBackupSubtitle, tvBootSubtitle, tvDumpModem,
          tvDumpSensor, tvFlashUefi, tvModemSubtitle, tvPanel, tvQuickBoot, tvRamvalue,
          tvSensorSubtitle, tvUefiSubtitle, tvUefiVersion);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
